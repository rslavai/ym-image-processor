#!/usr/bin/env python3
"""–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Gradio UI."""

import gradio as gr
from PIL import Image
import numpy as np
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(str(Path(__file__).parent))

try:
    from src.processors.background import BackgroundRemover
    print("‚úì BackgroundRemover –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    processor_available = True
    remover = BackgroundRemover()
except Exception as e:
    print(f"‚úó –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ BackgroundRemover: {e}")
    processor_available = False
    remover = None

def process_image(image):
    if image is None:
        return None, "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
    
    if not processor_available:
        return image, "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—à–∏–±–æ–∫"
    
    try:
        result = remover.process(image)
        return result, "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    except Exception as e:
        return image, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
with gr.Blocks(title="YM Image Processor - –¢–µ—Å—Ç") as demo:
    gr.Markdown("# üõçÔ∏è Yandex Market Image Processor - –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç")
    
    with gr.Row():
        with gr.Column():
            input_image = gr.Image(
                label="–ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
                type="pil"
            )
            process_btn = gr.Button("üöÄ –£–¥–∞–ª–∏—Ç—å —Ñ–æ–Ω", variant="primary")
        
        with gr.Column():
            output_image = gr.Image(
                label="–†–µ–∑—É–ª—å—Ç–∞—Ç",
                type="pil"
            )
            status = gr.Textbox(label="–°—Ç–∞—Ç—É—Å", interactive=False)
    
    process_btn.click(
        fn=process_image,
        inputs=[input_image],
        outputs=[output_image, status]
    )

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ UI...")
    print("–û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –ø–æ –∞–¥—Ä–µ—Å—É: http://127.0.0.1:7862")
    demo.launch(
        server_name="127.0.0.1",
        server_port=7862,
        share=False,
        inbrowser=False,  # –ù–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        quiet=False  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ –ª–æ–≥–∏
    )