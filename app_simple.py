"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Render —Å –æ–±–ª–µ–≥—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª—å—é —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ–Ω–∞
"""
import os
import gc
from flask import Flask, render_template_string, request, jsonify, send_file
from PIL import Image
import io
import base64

app = Flask(__name__)
app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024  # 10MB max

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –º–æ–¥–µ–ª–∏
rembg_session = None

HTML = '''
<!DOCTYPE html>
<html>
<head>
    <title>YM Image Processor</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container {
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }
        h1 {
            color: #333;
            text-align: center;
        }
        .status {
            padding: 15px;
            margin: 20px 0;
            border-radius: 10px;
            text-align: center;
        }
        .success {
            background: #d4edda;
            color: #155724;
        }
        .info {
            background: #d1ecf1;
            color: #0c5460;
        }
        button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 30px;
            cursor: pointer;
            font-size: 16px;
            display: block;
            margin: 20px auto;
        }
        button:hover {
            transform: translateY(-2px);
        }
        .upload-box {
            border: 2px dashed #667eea;
            padding: 30px;
            text-align: center;
            border-radius: 10px;
            margin: 20px 0;
        }
        input[type="file"] {
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üõçÔ∏è YM Image Processor</h1>
        <p style="text-align: center; color: #666;">–°–µ—Ä–≤–∏—Å —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ–Ω–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</p>
        
        <div class="status info">
            ‚ÑπÔ∏è –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
        </div>
        
        <div class="upload-box">
            <form method="POST" action="/process" enctype="multipart/form-data">
                <p>–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:</p>
                <input type="file" name="file" accept="image/*" required>
                <button type="submit">üöÄ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</button>
            </form>
        </div>
        
        <div style="text-align: center; margin-top: 30px; color: #666;">
            <small>Free –ø–ª–∞–Ω: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 30-60 —Å–µ–∫—É–Ω–¥</small>
        </div>
    </div>
</body>
</html>
'''

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return render_template_string(HTML)

@app.route('/health')
def health():
    """Health check endpoint"""
    return jsonify({"status": "healthy", "service": "ym-image-processor"})

def init_model():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ"""
    global rembg_session
    if rembg_session is None:
        try:
            print("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...", flush=True)
            from rembg import new_session
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—É—é –ª–µ–≥–∫—É—é –º–æ–¥–µ–ª—å
            rembg_session = new_session('u2netp')  # 180MB
            print("–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞!", flush=True)
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}", flush=True)
            return False
    return True

@app.route('/process', methods=['POST'])
def process():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–æ–Ω–∞"""
    try:
        if 'file' not in request.files:
            return "–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω", 400
            
        file = request.files['file']
        if file.filename == '':
            return "–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω", 400
            
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = Image.open(file.stream)
        
        # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ (–¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏)
        max_size = 1500
        if img.width > max_size or img.height > max_size:
            img.thumbnail((max_size, max_size), Image.Resampling.LANCZOS)
        
        # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å –∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
        process_success = False
        result_img = None
        
        if init_model():
            try:
                from rembg import remove
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
                print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img.size}...", flush=True)
                result_img = remove(img, session=rembg_session)
                process_success = True
                print("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!", flush=True)
                
                # –û—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å
                gc.collect()
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}", flush=True)
        # –§–æ—Ä–º–∏—Ä—É–µ–º HTML –æ—Ç–≤–µ—Ç
        if process_success and result_img:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ base64 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            buffered = io.BytesIO()
            result_img.save(buffered, format="PNG")
            img_base64 = base64.b64encode(buffered.getvalue()).decode()
            
            return f"""
            <html>
            <head>
                <style>
                    body {{
                        font-family: Arial, sans-serif;
                        max-width: 1000px;
                        margin: 0 auto;
                        padding: 20px;
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        min-height: 100vh;
                    }}
                    .container {{
                        background: white;
                        border-radius: 20px;
                        padding: 30px;
                        box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                        text-align: center;
                    }}
                    .success {{
                        background: #d4edda;
                        color: #155724;
                        padding: 15px;
                        border-radius: 10px;
                        margin: 20px 0;
                    }}
                    img {{
                        max-width: 100%;
                        max-height: 500px;
                        margin: 20px 0;
                        border-radius: 10px;
                        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
                    }}
                    .download-btn {{
                        display: inline-block;
                        margin: 20px;
                        padding: 15px 30px;
                        background: linear-gradient(135deg, #56ab2f 0%, #a8e063 100%);
                        color: white;
                        text-decoration: none;
                        border-radius: 30px;
                        font-weight: bold;
                    }}
                    a {{
                        display: inline-block;
                        margin: 20px;
                        padding: 15px 30px;
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        color: white;
                        text-decoration: none;
                        border-radius: 30px;
                    }}
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>üéâ –§–æ–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!</h1>
                    <div class="success">
                        <p>‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ</p>
                        <p>–†–∞–∑–º–µ—Ä: {result_img.size[0]}x{result_img.size[1]} –ø–∏–∫—Å–µ–ª–µ–π</p>
                    </div>
                    <img src="data:image/png;base64,{img_base64}" alt="–†–µ–∑—É–ª—å—Ç–∞—Ç">
                    <br>
                    <a href="data:image/png;base64,{img_base64}" download="result.png" class="download-btn">
                        üíæ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    </a>
                    <a href="/">üîÑ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ—â–µ</a>
                </div>
            </body>
            </html>
            """
        else:
            # –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            return f"""
            <html>
            <head>
                <style>
                    body {{
                        font-family: Arial, sans-serif;
                        max-width: 800px;
                        margin: 0 auto;
                        padding: 20px;
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        min-height: 100vh;
                    }}
                    .container {{
                        background: white;
                        border-radius: 20px;
                        padding: 30px;
                        box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                        text-align: center;
                    }}
                    .warning {{
                        background: #fff3cd;
                        color: #856404;
                        padding: 15px;
                        border-radius: 10px;
                        margin: 20px 0;
                    }}
                    a {{
                        display: inline-block;
                        margin: 20px;
                        padding: 15px 30px;
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        color: white;
                        text-decoration: none;
                        border-radius: 30px;
                    }}
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h1>
                    <div class="warning">
                        <p>–ú–æ–¥–µ–ª—å —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ–Ω–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞</p>
                        <p>–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {img.size[0]}x{img.size[1]} –ø–∏–∫—Å–µ–ª–µ–π</p>
                        <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É</p>
                    </div>
                    <p><small>Free –ø–ª–∞–Ω –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –ø–∞–º—è—Ç–∏</small></p>
                    <a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è</a>
                </div>
            </body>
            </html>
            """
        
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {str(e)}", 500

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 8080))
    print(f"Starting server on port {port}", flush=True)
    app.run(host='0.0.0.0', port=port, debug=False)